pipeline {
    agent any 
    stages {
        stage("Build") {
            steps {
                echo "Building....." // Task: Build the code using Maven
            }
        }
        
        stage("Unit and Integration Tests") {
            steps {
                echo "Running unit and integration tests....." // Task: Run unit and integration tests using Maven
            }
            post {
                success {
                    emailext body: "Build ${currentBuild.fullDisplayName} succeeded",
                             subject: "${env.JOB_NAME} - Build #${env.BUILD_NUMBER} - Successful",
                             to: chathurikadeshani094@gmail.com',
                             attachLog: true
                }
                failure {
                    emailext body: "Build ${currentBuild.fullDisplayName} failed",
                             subject: "${env.JOB_NAME} - Build #${env.BUILD_NUMBER} - Failed",
                             to: 'chathurikadeshani094@gmail.com',
                             attachLog: true
                }
                unstable {
                    emailext body: "Build ${currentBuild.fullDisplayName} is unstable",
                             subject: "${env.JOB_NAME} - Build #${env.BUILD_NUMBER} - Unstable",
                             to: 'chathurikadeshani094@gmail.com',
                             attachLog: true
                }
                always {
                    emailext body: "Build ${currentBuild.fullDisplayName} has finished with status ${currentBuild.currentResult}",
                             subject: "${env.JOB_NAME} - Build #${env.BUILD_NUMBER} - ${currentBuild.currentResult}",
                             to: 'chathurikadeshani094@gmail.com',
                             attachLog: true
                }
            }
        }
        
        stage("Code Analysis") {
            steps {
                echo "Performing code analysis....." // Task: Integrate code analysis tool, e.g., SonarQube
            }
        }
        
        stage("Security Scan") {
            steps {
                echo "Performing security scan....." // Task: Perform security scan using OWASP ZAP or SonarQube
            }
        }
        
        stage("Deploy to Staging") {
            steps {
                echo "Deploying to staging server....." // Task: Deploy to staging server using Jenkins Deploy Plugin or AWS CLI
            }
        }
        
        stage("Integration Tests on Staging") {
            steps {
                echo "Running integration tests on staging environment....." // Task: Run integration tests on staging environment
            }
        }
        
        stage("Deploy to Production") {
            steps {
                echo "Deploying to production server....." // Task: Deploy to production server using Jenkins Deploy Plugin or AWS CLI
            }
        }
    }
}
